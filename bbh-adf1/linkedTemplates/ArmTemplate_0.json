{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "bbh-adf1"
		},
		"adf_sql_server_test10_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'adf_sql_server_test10'"
		},
		"mysqlflexibleservertest1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'mysqlflexibleservertest1'"
		},
		"bbhbatch1_accessKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accessKey' of 'bbhbatch1'"
		},
		"localMySQL_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'localMySQL'"
		},
		"AzureBlobStorage1_properties_typeProperties_serviceEndpoint": {
			"type": "string",
			"defaultValue": "https://bbstorageaccountea.blob.core.windows.net/"
		},
		"adf_sql_server_test10_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "sql-server-test10.database.windows.net"
		},
		"adf_sql_server_test10_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "adf"
		},
		"adf_sql_server_test10_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "beibeihu"
		},
		"bbhbatch1_properties_typeProperties_batchUri": {
			"type": "string",
			"defaultValue": "https://bbhbatch1.eastus.batch.azure.com"
		},
		"bbhbatch1_properties_typeProperties_poolName": {
			"type": "string",
			"defaultValue": "adf-test"
		},
		"bbhbatch1_properties_typeProperties_accountName": {
			"type": "string",
			"defaultValue": "bbhbatch1"
		},
		"localMySQL_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "localhost"
		},
		"localMySQL_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "adf"
		},
		"localMySQL_properties_typeProperties_username": {
			"type": "string",
			"defaultValue": "adf"
		},
		"AzureMySql680_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/aa56909b-7f07-48b6-85fd-3bf928527a27/resourceGroups/test-for-lab/providers/Microsoft.DBforMySQL/flexibleServers/mysql-flexible-server-test1"
		},
		"AzureMySql680_properties_groupId": {
			"type": "string",
			"defaultValue": "mysqlServer"
		},
		"sql-server-test10-PE_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/aa56909b-7f07-48b6-85fd-3bf928527a27/resourceGroups/test-for-lab/providers/Microsoft.Sql/servers/sql-server-test10"
		},
		"sql-server-test10-PE_properties_groupId": {
			"type": "string",
			"defaultValue": "sqlServer"
		},
		"sql-server-test10-PE_properties_fqdns": {
			"type": "array",
			"defaultValue": [
				"sql-server-test10.database.windows.net"
			]
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "used for copy activity source",
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"serviceEndpoint": "[parameters('AzureBlobStorage1_properties_typeProperties_serviceEndpoint')]",
					"accountKind": "StorageV2"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/adf_sql_server_test10')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "adf/sql-server-test10.database.windows.net",
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('adf_sql_server_test10_properties_typeProperties_server')]",
					"database": "[parameters('adf_sql_server_test10_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('adf_sql_server_test10_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('adf_sql_server_test10_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/mysqlflexibleservertest1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureMySql",
				"typeProperties": {
					"connectionString": "[parameters('mysqlflexibleservertest1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SHIR-test1')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/default')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks",
			"apiVersion": "2018-06-01",
			"properties": {},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ForEach_source_CSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"file_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().file_name",
							"type": "Expression"
						},
						"container": "blobforadf"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "NAME",
						"type": "String"
					},
					{
						"name": "GROUP",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/adf_sql_server_test10')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adf_sql_server_test10",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"table_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().table_name",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adf_sql_server_test10')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/mysql_flexible_server_test1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "mysql-flexible-server-test1.mysql.database.azure.com",
				"linkedServiceName": {
					"referenceName": "mysqlflexibleservertest1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [],
				"typeProperties": {
					"tableName": "inventory"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/mysqlflexibleservertest1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/parameter_sink_txt')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"file_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().file_name",
							"type": "Expression"
						},
						"container": "blobforadf2"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/parameter_source_txt')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"file_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().file_name",
							"type": "Expression"
						},
						"container": "blobforadf"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/psqlrc_conf')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "source file in CopyActivity1",
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "psqlrc.conf",
						"container": "blobforadf"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/testcopy_txt')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "target file in CopyActivity1",
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "testcopy.txt",
						"container": "blobforadf"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/bbhbatch1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "bbhbatch1.eastus.batch.azure.com",
				"annotations": [],
				"type": "AzureBatch",
				"typeProperties": {
					"batchUri": "[parameters('bbhbatch1_properties_typeProperties_batchUri')]",
					"poolName": "[parameters('bbhbatch1_properties_typeProperties_poolName')]",
					"accountName": "[parameters('bbhbatch1_properties_typeProperties_accountName')]",
					"linkedServiceName": {
						"referenceName": "AzureBlobStorage1",
						"type": "LinkedServiceReference"
					},
					"accessKey": {
						"type": "SecureString",
						"value": "[parameters('bbhbatch1_accessKey')]"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/localMySQL')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "MySql",
				"typeProperties": {
					"server": "[parameters('localMySQL_properties_typeProperties_server')]",
					"port": 3306,
					"database": "[parameters('localMySQL_properties_typeProperties_database')]",
					"username": "[parameters('localMySQL_properties_typeProperties_username')]",
					"sslMode": 1,
					"useSystemTrustStore": 0,
					"password": {
						"type": "SecureString",
						"value": "[parameters('localMySQL_password')]"
					},
					"driverVersion": "v2"
				},
				"connectVia": {
					"referenceName": "SHIR-test1",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SHIR-test1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Azure-IR-EastUS')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"description": "Managed VNet",
				"typeProperties": {
					"computeProperties": {
						"location": "East US",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 10,
							"cleanup": false,
							"customProperties": []
						},
						"pipelineExternalComputeScaleProperties": {
							"timeToLive": 60,
							"numberOfPipelineNodes": 1,
							"numberOfExternalNodes": 1
						}
					}
				},
				"managedVirtualNetwork": {
					"type": "ManagedVirtualNetworkReference",
					"referenceName": "default"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/AzureMySql680')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('AzureMySql680_properties_privateLinkResourceId')]",
				"groupId": "[parameters('AzureMySql680_properties_groupId')]"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/sql-server-test10-PE')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('sql-server-test10-PE_properties_privateLinkResourceId')]",
				"groupId": "[parameters('sql-server-test10-PE_properties_groupId')]",
				"fqdns": "[parameters('sql-server-test10-PE_properties_fqdns')]"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ControlFlow1_Use_ForEach_to_load_source_CSV_to_SQLDB_tables')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "zhttps://www.youtube.com/watch?v=qMXp9Xnh8T8",
				"activities": [
					{
						"name": "ForEach CSV in file_list",
						"description": "animals.csv\nmovies.csv",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.file_list",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy CSV data to SQLDB tables",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false,
											"tableOption": "autoCreate",
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ForEach_source_CSV",
											"type": "DatasetReference",
											"parameters": {
												"file_name": {
													"value": "@concat(item(),'.csv')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "adf_sql_server_test10",
											"type": "DatasetReference",
											"parameters": {
												"table_name": {
													"value": "@item()",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"file_list": {
						"type": "array",
						"defaultValue": [
							"animals",
							"movies"
						]
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-09-16T08:28:57Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ForEach_source_CSV')]",
				"[concat(variables('factoryId'), '/datasets/adf_sql_server_test10')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyActivity1_copy_file_from_source_to_sink_in_blob_container')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "copy_file_from_container_to_another",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.1:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "blobforadf//psqlrc.conf"
							},
							{
								"name": "Destination",
								"value": "blobforadf//testcopy.txt"
							}
						],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false,
							"validateDataConsistency": false
						},
						"inputs": [
							{
								"referenceName": "psqlrc_conf",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "testcopy_txt",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-09-16T07:18:03Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/psqlrc_conf')]",
				"[concat(variables('factoryId'), '/datasets/testcopy_txt')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyActivity3_copy_files_between_containers_using_parameters')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "https://www.youtube.com/watch?v=LIbAcN8O5ao\n参数化之后wildcard不是很好用且功能冲突，因此还是写死1个文件名，多个文件用ForEach",
				"activities": [
					{
						"name": "copy_files_between_containers_using_parameters",
						"description": "",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"deleteFilesAfterCompletion": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "parameter_source_txt",
								"type": "DatasetReference",
								"parameters": {
									"file_name": {
										"value": "@pipeline().parameters.source_file_name",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "parameter_sink_txt",
								"type": "DatasetReference",
								"parameters": {
									"file_name": {
										"value": "@pipeline().parameters.sink_file_name",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"source_file_name": {
						"type": "string",
						"defaultValue": "file1_source.txt"
					},
					"sink_file_name": {
						"type": "string",
						"defaultValue": "file1_sink.txt"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-09-23T08:00:16Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/parameter_source_txt')]",
				"[concat(variables('factoryId'), '/datasets/parameter_sink_txt')]"
			]
		}
	]
}